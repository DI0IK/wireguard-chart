{{- $secretName := .Values.secretName | required ".Values.secretName is required." -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-wireguard"
  labels:
    role: vpn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-wireguard"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-wireguard"
        role: vpn
    spec:
      initContainers:
        - name: sysctls
          image: busybox
          command:
          - sh
          - -c
          - sysctl -w net.ipv4.ip_forward=1 && sysctl -w net.ipv4.conf.all.forwarding=1
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
            privileged: true
      containers:
        - name: wireguard
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          imagePullSecrets:
            - name: "{{ .Values.image.pullSecret }}"
          command:
          - sh
          - -c
          - echo "Public key '$(wg pubkey < /etc/wireguard/privatekey)'" && /entrypoint.sh
          ports:
          - containerPort: 51820
            protocol: UDP
            name: wireguard
          env:
          - name: LOG_LEVEL
            value: info
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
            privileged: true
          resources:
            requests:
              memory: 64Mi
              cpu: "100m"
            limits:
              memory: 256Mi
          volumeMounts:
          - name: cfgmap
            mountPath: /etc/wireguard/wg0.conf
            subPath: wg0.conf
          - name: secret
            mountPath: /etc/wireguard/privatekey
            subPath: privatekey
      volumes:
      - name: cfgmap
        configMap:
          name: "{{ .Release.Name }}-wg-configmap"
      - name: secret
        secret:
          secretName: "{{ $secretName }}"